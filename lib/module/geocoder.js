var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _reactNative=require("react-native");var _native=_interopRequireDefault(require("./native"));var _googleApi=_interopRequireDefault(require("./googleApi"));var defaultOptions={locale:'en',fallbackToGoogle:false,forceGoogleOnIos:false,maxResults:2};function getApiKey(apiKey){if(!apiKey){throw new Error('Invalid API Key: `apiKey` is required for using Google Maps API.');}return apiKey;}function geocodePositionGoogle(position){var options,apiKey,locale,headers,_args=arguments;return _regenerator.default.async(function geocodePositionGoogle$(_context){while(1){switch(_context.prev=_context.next){case 0:options=_args.length>1&&_args[1]!==undefined?_args[1]:{};apiKey=getApiKey(options.apiKey);locale=options.locale||defaultOptions.locale;headers=options.requestHeaders;return _context.abrupt("return",_googleApi.default.geocodePosition(apiKey,position,locale,headers));case 5:case"end":return _context.stop();}}},null,null,null,Promise);}function geocodeAddressGoogle(address){var options,apiKey,locale,headers,_args2=arguments;return _regenerator.default.async(function geocodeAddressGoogle$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:options=_args2.length>1&&_args2[1]!==undefined?_args2[1]:{};apiKey=getApiKey(options.apiKey);locale=options.locale||defaultOptions.locale;headers=options.requestHeaders;if(!options.bounds){_context2.next=6;break;}return _context2.abrupt("return",_googleApi.default.geocodeAddressWithBounds(apiKey,address,options.bounds,locale,headers));case 6:return _context2.abrupt("return",_googleApi.default.geocodeAddress(apiKey,address,locale,headers));case 7:case"end":return _context2.stop();}}},null,null,null,Promise);}function geocodePosition(position){var options,_args3=arguments;return _regenerator.default.async(function geocodePosition$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:options=_args3.length>1&&_args3[1]!==undefined?_args3[1]:{};if(!(!position||position.lat==null||position.lng==null)){_context3.next=3;break;}throw new Error('Invalid Position: `{lat, lng}` is required');case 3:if(!(options.forceGoogleOnIos&&_reactNative.Platform.OS==='ios')){_context3.next=5;break;}return _context3.abrupt("return",geocodePositionGoogle(position,options));case 5:if(!(_native.default==null)){_context3.next=9;break;}if(!options.fallbackToGoogle){_context3.next=8;break;}return _context3.abrupt("return",geocodePositionGoogle(position,options));case 8:throw new Error('Missing Native Module: Please check the module linking, '+'or set `fallbackToGoogle` in the init options.');case 9:_context3.prev=9;if(!(_reactNative.Platform.OS==='android')){_context3.next=16;break;}_context3.next=13;return _regenerator.default.awrap(_native.default.geocodePositionAndroid(position,options));case 13:return _context3.abrupt("return",_context3.sent);case 16:_context3.next=18;return _regenerator.default.awrap(_native.default.geocodePosition(position,options.locale||defaultOptions.locale,options.maxResults||defaultOptions.maxResults));case 18:return _context3.abrupt("return",_context3.sent);case 19:_context3.next=26;break;case 21:_context3.prev=21;_context3.t0=_context3["catch"](9);if(!options.fallbackToGoogle){_context3.next=25;break;}return _context3.abrupt("return",geocodePositionGoogle(position,options));case 25:throw new Error('Native Error: '+(_context3.t0===null||_context3.t0===void 0?void 0:_context3.t0.message)||'Unknown Execption.');case 26:case"end":return _context3.stop();}}},null,null,[[9,21]],Promise);}function geocodeAddress(address){var options,_options$regionIos,center,radius,_args4=arguments;return _regenerator.default.async(function geocodeAddress$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:options=_args4.length>1&&_args4[1]!==undefined?_args4[1]:{};if(address){_context4.next=3;break;}throw new Error('Invalid Address: `string` is required');case 3:if(!(options.forceGoogleOnIos&&_reactNative.Platform.OS==='ios')){_context4.next=5;break;}return _context4.abrupt("return",geocodeAddressGoogle(address,options));case 5:if(!(_native.default==null)){_context4.next=9;break;}if(!options.fallbackToGoogle){_context4.next=8;break;}return _context4.abrupt("return",geocodeAddressGoogle(address,options));case 8:throw new Error('Missing Native Module: Please check the module linking, '+'or set `fallbackToGoogle` in the init options.');case 9:_context4.prev=9;if(!(_reactNative.Platform.OS==='ios'&&options.regionIos)){_context4.next=17;break;}_options$regionIos=options.regionIos,center=_options$regionIos.center,radius=_options$regionIos.radius;_context4.next=14;return _regenerator.default.awrap(_native.default.geocodeAddressInRegion(address,center.lat,center.lng,radius,options.locale||defaultOptions.locale,options.maxResults||defaultOptions.maxResults));case 14:return _context4.abrupt("return",_context4.sent);case 17:if(!(_reactNative.Platform.OS==='android')){_context4.next=23;break;}_context4.next=20;return _regenerator.default.awrap(_native.default.geocodeAddressAndroid(address,options));case 20:return _context4.abrupt("return",_context4.sent);case 23:_context4.next=25;return _regenerator.default.awrap(_native.default.geocodeAddress(address,options.locale||defaultOptions.locale,options.maxResults||defaultOptions.maxResults));case 25:return _context4.abrupt("return",_context4.sent);case 26:_context4.next=33;break;case 28:_context4.prev=28;_context4.t0=_context4["catch"](9);if(!options.fallbackToGoogle){_context4.next=32;break;}return _context4.abrupt("return",geocodeAddressGoogle(address,options));case 32:throw new Error('Native Error: '+(_context4.t0===null||_context4.t0===void 0?void 0:_context4.t0.message)||'Unknown Execption.');case 33:case"end":return _context4.stop();}}},null,null,[[9,28]],Promise);}var _default={geocodePosition:geocodePosition,geocodePositionGoogle:geocodePositionGoogle,geocodeAddress:geocodeAddress,geocodeAddressGoogle:geocodeAddressGoogle};exports.default=_default;
//# sourceMappingURL=geocoder.js.map